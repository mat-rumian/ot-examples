AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: OpenTelemetry SQS Context Propagation
Parameters:
  SumoHttpTracesUrl:
    Description: Sumo Logic HTTP Traces URL
    Type: String
Resources:
  PusherApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: PusherApi
      TracingEnabled: false
      OpenApiVersion: 3.0.2
  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: SQSQueue
  PusherFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: pusher.lambda_handler
      Runtime: python3.9
      CodeUri: ./pusher
      Description: Build AWS Observability layer
      MemorySize: 512
      Timeout: 30
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AmazonS3ReadOnlyAccess
        - Statement:
            - Sid: AWSLambdaInvokeAndGetFunctionAccess
              Effect: Allow
              Action:
                - lambda:InvokeAsync
                - lambda:InvokeFunction
                - lambda:GetFunction
              Resource:
                - "*"
        - Statement:
            - Sid: SQSSendMsg
              Effect: Allow
              Action:
                - sqs:SendMessage
              Resource:
                - !GetAtt SQSQueue.Arn
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          SUMOLOGIC_HTTP_TRACES_ENDPOINT_URL: !Ref SumoHttpTracesUrl
          AWS_LAMBDA_EXEC_WRAPPER: /opt/otel-instrument
          OTEL_SERVICE_NAME: lambda-pusher
          OTEL_RESOURCE_ATTRIBUTES: application=sqs-ctx-app
          OTEL_TRACES_SAMPLER: always_on
          SQS_QUEUE_URL: { "Ref": "SQSQueue" }
      Layers:
        - !FindInMap [RegionLayers, !Ref "AWS::Region", layer]
      Events:
        getEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref PusherApi
            Path: /
            Method: GET
    DependsOn: SQSQueue

  PullerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: puller.lambda_handler
      Runtime: python3.9
      CodeUri: ./puller
      Description: Build AWS Observability layer
      MemorySize: 512
      Timeout: 30
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - Statement:
            - Sid: AWSLambdaInvokeAndGetFunctionAccess
              Effect: Allow
              Action:
                - lambda:InvokeAsync
                - lambda:InvokeFunction
                - lambda:GetFunction
              Resource:
                - "*"
        - Statement:
            - Sid: ListBucket
              Effect: Allow
              Action:
                - s3:ListBucket
                - s3:ListAllMyBuckets
              Resource:
                - "*"
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          SUMOLOGIC_HTTP_TRACES_ENDPOINT_URL: !Ref SumoHttpTracesUrl
          AWS_LAMBDA_EXEC_WRAPPER: /opt/otel-instrument
          OTEL_SERVICE_NAME: lambdaâ€‘puller
          OTEL_RESOURCE_ATTRIBUTES: application=sqs-ctx-app
          OTEL_TRACES_SAMPLER: always_on
      Layers:
        - !FindInMap [RegionLayers, !Ref "AWS::Region", layer]
      Events:
        getSqs:
          Type: SQS
          Properties:
            Queue: !GetAtt SQSQueue.Arn
    DependsOn: SQSQueue

Outputs:
  ApiUrl:
    Description: "SQS Pusher Lambda function trigger URL"
    Value: !Sub "https://${PusherApi}.execute-api.${AWS::Region}.amazonaws.com/PusherApi/"
  SQSQueueUrl:
    Description: "SQS Queue URL"
    Value: { "Ref": "SQSQueue" }

Mappings:
  RegionLayers:
    ap-northeast-1:
      layer: "arn:aws:lambda:us-east-1:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    ap-northeast-2:
      layer: "arn:aws:lambda:ap-northeast-2:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    ap-south-1:
      layer: "arn:aws:lambda:ap-south-1:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    ap-southeast-1:
      layer: "arn:aws:lambda:ap-southeast-1:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    ap-southeast-2:
      layer: "arn:aws:lambda:ap-southeast-2:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    ca-central-1:
      layer: "arn:aws:lambda:ca-central-1:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    eu-central-1:
      layer: "arn:aws:lambda:eu-central-1:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:4"
    eu-north-1:
      layer: "arn:aws:lambda:eu-north-1:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:4"
    eu-west-1:
      layer: "arn:aws:lambda:eu-west-1:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    eu-west-2:
      layer: "arn:aws:lambda:eu-west-2:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    eu-west-3:
      layer: "arn:aws:lambda:eu-west-3:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    sa-east-1:
      layer: "	arn:aws:lambda:sa-east-1:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    us-east-1:
      layer: "arn:aws:lambda:us-east-1:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    us-east-2:
      layer: "arn:aws:lambda:us-east-2:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
    us-west-1:
      layer: "arn:aws:lambda:us-west-1:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:2"
    us-west-2:
      layer: "arn:aws:lambda:us-west-2:663229565520:layer:sumologic-otel-python-x86_64-ver-1-11-1:3"
Metadata:
  AWS::ServerlessRepo::Application:
    Name: OT-SQS-CTX-PROPAGATION
    Description: OpenTelemetry context propagation thru SQS queue
    Author: Sumo Logic, Mateusz 'mat' Rumian
    SpdxLicenseId: Apache-2.0
    ReadmeUrl: README.md
    Labels: ['opentelemetry', 'python39', 'lambda', 'sqs', 'context', 'propagation']
    HomePageUrl: https://github.com/SumoLogic/the-coffee-bar
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/mat-rumian/ot-examples
